"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase1
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/1993141
===================================================================================================
Test Case      : 1993141
Description    : Verify AppServe FW Download Date
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Step 1 - 
Ensure Date is specified in the AppServ Releasemanifest.xml file

Step 2 - 
eg : <buildDate builddate="Tue Nov 15 23:59:49 UTC 2022" />


===================================================================================================


"""
import pytest
import os
import json
from bs4 import BeautifulSoup
import datetime
# from itron.meter.Gen5Meter import ParallelMeter
# AUTOGENERATED Test Case 1993141

# @pytest.mark.skip(reason="TODO: unimplemented test case")
@pytest.mark.regress_nightly
#@pytest.mark.regress_smoke
@pytest.mark.suite_id("1990123")
@pytest.mark.test_case("1993141")

def test_case(logger ,decrypted_di_package):
        logger.trace("Executing Test Case 1993141 - Verify AppServe FW Download Date")
        logger.trace('Step 1')
        xml_file_path = (os.path.join(decrypted_di_package,"ReleaseManifest.xml"))
        with open(xml_file_path, 'r') as f:
                file_data = f.read()
        bs_data = BeautifulSoup(file_data, 'xml')
        elements = bs_data.find_all('buildDate')
        assert len(elements) == 1, "should be a single buildDate field in the xml file"
        date_string = elements[0]['builddate']

        # parse date_string with datetime
        xml_file_date = datetime.datetime.strptime(date_string, '%a %b %d %H:%M:%S UTC %Y')
        logger.trace("Date found in manifest: %s", str(xml_file_date))
        xml_file_date = str(xml_file_date).split(' ')
        
        json_file_path = decrypted_di_package+"/encrypted/signer-receipt.json"
        logger.trace("file path"+json_file_path)
        with open(json_file_path, "rb") as fp:
                json_data = json.load(fp)
                logger.trace(json_data["timestamp"])
                json_file_date = json_data["timestamp"]
        json_file_date = json_file_date.split('T')
        logger.trace(json_file_date)
        assert xml_file_date[0] == json_file_date[0]



