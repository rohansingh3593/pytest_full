"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase1
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/1992810
===================================================================================================
Test Case      : 1992810
Description    : Verify the test signed version of Manifest file exist on the coldstart package on the specified location
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Step 1 - 
Unzip the build package on PC

Step 2 - 
Unzip should be successful

Step 3 - 
Check the extracted file has ReleaseManifest.xml along with other files

Step 4 - 
ReleaseManifest.xml file should present after extraction.

Step 5 - 
Verify the file size

Step 6 - 
Size should not be Zero byte/  not be an empty file.


===================================================================================================


"""
import pytest
import os
import subprocess

# AUTOGENERATED Test Case 1992810

# @pytest.mark.skip(reason="TODO: unimplemented test case")
@pytest.mark.regress_nightly
#@pytest.mark.regress_smoke
@pytest.mark.suite_id("1990123")
@pytest.mark.test_case("1992810")
def test_case(logger, decrypted_di_package):
    logger.trace("Executing Test Case 1992810 - Verify the test signed version of Manifest file exist on the coldstart package on the specified location")
    logger.trace('Step 1')
    """decrypted_di_package fixture is Unzip the build package  """
    logger.trace('Step 2')
    output = subprocess.check_output(f"ls -lR {decrypted_di_package}".split())
    output = output.decode('utf-8')
    assert len(output)!=0,"Unzip not successful"
    logger.trace('Step 3')
    check_all_files = output.splitlines()
    assert len(check_all_files)>1,"No files present in folder after extraction"
    logger.trace('Step 4')
    assert "ReleaseManifest.xml" in output
    logger.trace('Step 5')
    ReleaseManifest_file = os.path.join(decrypted_di_package, "ReleaseManifest.xml")
    file_size = os.path.getsize(ReleaseManifest_file)
    logger.trace('Step 6')
    assert file_size != 0