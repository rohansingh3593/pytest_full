
"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase1
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/1990699
===================================================================================================
Test Case      : 1990699
Description    :  Deployment of the Latest ApplicationService component package (ColdStart Package) on the RIVA firmware using 4.1 and 4.2 Meters CLI method                                     
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Step 1 - 
Latest ApplicationService component package deployment using FDM or CLI method and Net Manager
methodImProvHelper.sh --image <Image_Name>

Step 2 - 
RIVA firmware installation should be successful with the given set of Hardware


===================================================================================================


"""
import pytest
from itron.meter.Gen5Meter import ParallelMeter

# AUTOGENERATED Test Case 1990699

# @pytest.mark.skip(reason="TODO: unimplemented test case")
@pytest.mark.regress_weekly
#@pytest.mark.regress_smoke
@pytest.mark.suite_id("1990124")
@pytest.mark.test_case("1990699")
def test_case(meter, logger, current_fw_ver):
    with ParallelMeter(meter,logger) as remote_meter:
        logger.trace("Executing Test Case 1990699 -  Deployment of the Latest ApplicationService component package (ColdStart Package) on the RIVA firmware using 4.1 and 4.2 Meters CLI method                                     ")

        logger.trace('Step 1')
        remote_meter.coldstart(version=current_fw_ver)
        fwver, asver = remote_meter.version_info()
        logger.trace("Current versions: fw:%s as:%s", fwver, asver)
        
        logger.trace('Step 2')
        assert fwver == current_fw_ver 
        logger.trace("TEST PASSED: Current versions: fw:%s as:%s", fwver, asver)



