"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase1
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/2013601
===================================================================================================
Test Case      : 2013601
Description    : Verify "ImageProcessStatus" and "ImageActivateInfo" data bases
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Step 1 - 
Install the given AppServices on a fresh Meter.

Step 2 - 
Meter should update with given software

Step 3 - 
Check Databases
echo "select * from ImageProcessStatus;" | sqlite3 -header /usr/share/itron/database/muse01.db
echo "select * from ImageActivateInfo;" | sqlite3 -header /usr/share/itron/database/muse01.db

ex:
# echo "select * from ImageProcessStatus;" | sqlite3 -header /usr/share/itron/database/muse01.db
Id|GroupId|ComponentId|ImageId|ImagePath|ImageType|BeginTime|EndTime|State|ResultCode|ImProvPID|TaskId|InitialKernel|InitialRFS|PendingKernel|PendingRFS|Parameters|RetryCount|DisplayLineId|SystemBootCount|ActivationRetryCount|InitialEarlyInit|PendingEarlyInit
1|1|0|1|/mnt/idleRFS/ImProv_Decrypted_image.tar.gz|1|1595760288|1595760387|1|0|2936|2|16|3|0|0|ImProv --imageid 1 --imagepath DI-AppServices-Package-1.0.11.0_TS.tar.gz|1|-1|1|-1|kernelinit2|

# echo "select * from ImageActivateInfo;" | sqlite3 -header /usr/share/itron/database/muse01.db
Id|GroupId|ComponentId|ImageTransferStatusId|Key|Value
1|1|0|1|earlyinitsupport|true
2|1|0|1|fdwfiles|
3|1|0|1|hwids|67437825,67175937,67176193,67176449,67176705,218169601,218169857,218170113,218170369,67176961,67177217,67177473,67177729,184615169,201392385
4|1|0|1|packageName|/tmp/tmp.OBDESAb95T/usr/share/itron/container-overlays/ItronStandAloneDIInit-0.0.0-1-armhf-uClibc.tar.bz2 /tmp/tmp.OBDESAb95T/usr/share/itron/container-overlays/AgentSupport-0.0.0-1.tar.bz2 /tmp/tmp.OBDESAb95T/usr/share/itron/container-overlays/ItronDIInit-0.0.0-1-armhf-uClibc.tar.bz2 /tmp/tmp.OBDESAb95T/usr/share/itron/container-overlays/AgentSupportV2-0.0.0-1.tar.bz2 /tmp/tmp.OBDESAb95T/usr/share/itron/container-overlays/B2DatavLibrary-0.0.0-1-armhf-uClibc.tar.bz2
5|1|0|1|previous BOOTLOADER unsigned|502f681635278a65e841b238dc3fc48ee9f854c0f92bf28ae722321121e41c37
6|1|0|1|previous BOOTLOADER version|10.0.264.1
7|1|0|1|previous FIXED_LEGALLY_RELEVANT_RFS unsigned|a5429236edf7fd45e3a38390f1ef549632dee3bad9797ff21498974488ef22dd
8|1|0|1|previous FIXED_LEGALLY_RELEVANT_RFS version|10.0.219.5
9|1|0|1|previous LEGALLY_RELEVANT_RFS unsigned|196646fdc850a44f718b32037ddc6346a823280cd8c011b33d6f693bf2d81b20
10|1|0|1|previous LEGALLY_RELEVANT_RFS version|10.0.443.3


Step 4 - 
'ImageId' in "ImageProcessStatus" database and 'ImageTransferStatusId' in "ImageActivateInfo": should be same (It is "1" in the example)

Check 'ResultCode' as 0 in ImageProcessStatus database


===================================================================================================


"""
import pytest
from itron.meter.Gen5Meter import ParallelMeter



# AUTOGENERATED Test Case 2013601

# @pytest.mark.skip(reason="TODO: unimplemented test case")
@pytest.mark.regress_nightly
# @pytest.mark.crosslynx_test
@pytest.mark.gmr_meter
@pytest.mark.slow1020 # test takes 10 to 20 minutes
#@pytest.mark.regress_smoke
@pytest.mark.suite_id("2012056")
@pytest.mark.test_case("2013601")
def test_case(meter, logger,di_version,di_package):
    with ParallelMeter(meter,logger) as remote_meter:
        logger.trace("Executing Test Case 2013601 - Verify \"ImageProcessStatus\" and \"ImageActivateInfo\" data bases")
        logger.trace('Step 1')
        remote_meter.gmr()
        remote_meter.install(file=di_package)
        stdout = remote_meter.command('TransactionProcess --event="MUSE_V1;ReadLid;ILID_DATASERVER_APPSERV_FW_VERSION;"')
        version = stdout[0].split('=')
        logger.trace('Step 2')
        assert di_version == version[1]
        logger.trace('Step 3')
        ImageProcessStatus = remote_meter.sql_query('select ImageId,ResultCode from ImageProcessStatus;')
        ImageProcessStatus = ImageProcessStatus[0].split('|')

        ImageActivateInfo = remote_meter.sql_query('select ImageTransferStatusId from ImageActivateInfo;')
        logger.trace('Step 4')
        for id in ImageActivateInfo:
            assert ImageProcessStatus[0] == id
        assert int(ImageProcessStatus[1]) == 0


