"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase1
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/2012063
===================================================================================================
Test Case      : 2012063
Description    : Verify AgentData in Meter database
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Step 1 - 
Install given AppServe Software

Step 2 - 
Meter should update with new software

Step 3 - 
Install any agent in Meter and heck AgentData in database sqlite3 --header
/usr/share/itron/database/muse01.db \"select * from AgentData\"

Step 4 - 
Data should be available in data base with no errorseg :# sqlite3 --header
/usr/share/itron/database/muse01.db \"select * from
AgentData\"\nId|AgentId|FeatureId|TimeStamp|Data\n1|50528119|50536311|1655790459|99#0#6#3#Firmware
ver  10.5.543.1\n2|50528119|50548599|1655790505|95#50593756#16777216#0#0#0#942#0:Success\n


===================================================================================================


"""
import pytest
from itron.meter.Gen5Meter import ParallelMeter
from tests.test_meters.utils import HAN_AGENT,install_agent_and_activate
# AUTOGENERATED Test Case 2012063

# @pytest.mark.skip(reason="TODO: unimplemented test case")
@pytest.mark.regress_nightly
@pytest.mark.slow1020 # test takes 10 to 20 minutes
#@pytest.mark.regress_smoke
@pytest.mark.suite_id("2012056")
@pytest.mark.test_case("2012063")
@pytest.mark.parametrize("agent_info", [HAN_AGENT])
def test_case(meter, logger, di_package,agent_info,di_version):
    with ParallelMeter(meter,logger) as remote_meter:
        logger.trace("Executing Test Case 2012063 - Verify AgentData in Meter database")
        logger.trace('Step 1')
        remote_meter.install(file=di_package)
        logger.trace('Step 2')
        appserve_version = remote_meter.version_info()
        assert di_version == appserve_version[1]
        logger.trace('Step 3')
        initial_max_id = remote_meter.sql_query('select max(id) from AgentData')
        logger.trace('Max Id in AgentData table before agent installation is: '+initial_max_id[0])
        install_agent_and_activate(remote_meter,logger,agent_info)
        logger.trace('Step 4')
        if initial_max_id and initial_max_id[0]:
            """In case of agent is already installed agentData table have previous data
            or previous TC agent installation failed then also have data with error msg"""
            cmd = f'select data from AgentData where id>{int(initial_max_id[0])};'
        else:
            cmd = f'select data from AgentData;'
        Agent_data=remote_meter.sql_query(cmd)
        for data in Agent_data:
            if ("95" in data):
                assert "Success" in data


