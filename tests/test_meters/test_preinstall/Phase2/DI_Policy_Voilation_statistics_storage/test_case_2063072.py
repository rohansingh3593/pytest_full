
"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase2
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/2063072
===================================================================================================
Test Case      : 2063072
Description    : Perform GMR and agent and Verify the DI Policy violation file get removed
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Step 1 - 
GMR the meter

Step 2 - 
agent uninstalled

Step 3 - 
Verify DI policy file get removed

Step 4 - 
DI Policy File removed

Step 5 - 
Verify DI Policy violations digest file removed

Step 6 - 



===================================================================================================


"""
import pytest
from tests.test_meters.utils import install_agent_and_activate,is_process_running,METROLOGY_DATA_AGENT

# AUTOGENERATED Test Case 2063072

# @pytest.mark.skip(reason="TODO: unimplemented test case")
@pytest.mark.regress_nightly
@pytest.mark.slow1020
@pytest.mark.gmr_meter
@pytest.mark.suite_id("2060761")
@pytest.mark.test_case("2063072")
def test_case(preinstalled_meter, logger):
    logger.trace("Executing Test Case 2063072 - Perform GMR and agent and Verify the DI Policy violation file get removed")


    agent=METROLOGY_DATA_AGENT
    install_agent_and_activate(preinstalled_meter, logger,agent)
    query=f'select AgentUID from agentinformation where AgentName = "{agent.name}";'
    agent_id=preinstalled_meter.sql_query(query)[0]

    logger.trace('Step 1')
    preinstalled_meter.gmr()

    logger.trace('Step 2')
    assert not is_process_running(preinstalled_meter,f'{METROLOGY_DATA_AGENT.name}_Daemon'), "Agent is still present after the GMR"


    logger.trace('Step 3')
    query = f'sqlite3 --header /usr/share/itron/database/muse01.db "select policyfile from DIPolicyFile where agentid = {agent_id}"'
    code, table = preinstalled_meter.command_with_code(query)
    logger.trace('Step 4')
    assert code != 0, "Dipolicy file is still present after the GMR"

    logger.trace('Step 5')
    query = 'sqlite3 --header /usr/share/itron/database/muse01.db "select * from PolicyViolationStatistics"'
    code, table = preinstalled_meter.command_with_code(query)
    logger.trace('Step 6')
    assert code != 0, "Dipolicy file is still present after the GMR"

