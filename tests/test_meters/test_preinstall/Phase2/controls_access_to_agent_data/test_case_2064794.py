"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase2
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/2064794
===================================================================================================
Test Case      : 2064794
Description    : Verify that if the requesting AgentID does not have permission to the Agent data, AppServices shall send an descriptive error code to the requesting Agent for Itron PubSub
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Step 1 -
Verify if no permission to Agent Data subscription, descriptive error message is send to Agent API

Eg :  Itron Pubsub policy file
<!--<Permission name="Network:Upstream"/>-->

Step 2 -
RMT: STMD.  Err: Unable to subscribe to lid, with errcode: 65539
Log:ALR:[P:0]StartProcessingMeterData failed: 0 Will retry till success.
DIA: WUpSD. Srt
Error: writing data to table failed: Unable to write data, with errcode: 65558


===================================================================================================


"""
import pytest
import time
from tests.test_meters.utils import refresh_container, install_agent_and_activate,P2P_AGENT
from tests.test_meters.rohan_utils import Config_push,agent_Config_collect,file_content_change,Container_stop,Dataserver_refresh,is_log_file_available,agent_policy_collect,policy_file_push,absolute_command
# AUTOGENERATED Test Case 2064794

# @pytest.mark.skip(reason="TODO: unimplemented test case")
@pytest.mark.regress_nightly
#@pytest.mark.regress_smoke
@pytest.mark.suite_id("2063316")
@pytest.mark.test_case("2064794")
def test_case(preinstalled_meter, logger, workdir):
    logger.trace("Executing Test Case 2064794 - Verify that if the requesting AgentID does not have permission to the Agent data, AppServices shall send an descriptive error code to the requesting Agent for Itron PubSub")
    logger.trace('Step 1')
    install_agent_and_activate(preinstalled_meter,logger,P2P_AGENT)
    agent = P2P_AGENT
    Feature_id = 50593756
    try:
        old_word = f'<Permission name="Data:Subscription:Agent"/>'
        new_word=f'<!--{old_word}-->'
        file = agent_policy_collect(preinstalled_meter,agent,base_dir=workdir,force=True)
        file_content_change(preinstalled_meter,file,old_word,new_word)
        policy_file_push(preinstalled_meter,agent)
        file = agent_Config_collect(preinstalled_meter,agent,Feature_id,base_dir=workdir)
        old_value1 = 'value="1#0#0#0#Itron#0#0#0#0#255#255#50593756#1#0"'
        new_value1 = 'value="1#10#20#100#Itron-localpublish#1#0#0#0#255#255#50593756#1#0"'
        old_value2 = 'value="0#0#50593756#1"'
        new_value2 = 'value="1#0#50593756#1"'
        file_content_change(preinstalled_meter,file,old_value1,new_value1)
        file_content_change(preinstalled_meter,file,old_value2,new_value2)
        Config_push(preinstalled_meter,Feature_id)

        logger.trace('Step 2')
        stop = time.time() + (3*60)
        while time.time()<=stop:
            code, stat = preinstalled_meter.command_with_code('cat /tmp/container/50593792/rootfs/tmp/agent/0302ff77/0302ff77_log | grep 65568')
            if code !=0:
                continue
            else:
                output = ('').join(stat)
                if '65568' in output :
                    logger.info("error_code %s",output)
                    break
            time.sleep(10)
        assert '65568' in output , "timeout for condition check"

    finally:
         agent_policy_collect(preinstalled_meter,agent,base_dir=workdir,force=True)
         policy_file_push(preinstalled_meter,agent)

        # Update the Data file at the FeatureConfiguration table at Initial State
         agent_Config_collect(preinstalled_meter,agent,Feature_id,base_dir=workdir,force=True)
         Config_push(preinstalled_meter,Feature_id)