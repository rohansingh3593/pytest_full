"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase2
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/2064796
===================================================================================================
Test Case      : 2064796
Description    : Verify if the requesting AgentID requesting access for feature ID's but the access is not granted for few of the feature ID's then it should log a violation in Policy Digest table -ItronPubSubAgent
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Step 1 -
Install Itron PubSub Agent and Ensure Agent's policy file is available at DIPolicyFile table.
Step 2-
Should list the Policy file
Step 3-
Remove a feature id and request feature Id which is not present in PolicyFile
<FeatureData>
<Feature description="PubSubFeature" ID="587464693"/>
<Feature description="PubSubFeature" ID="587464692"/>
<Feature description="PubSubFeature" ID="587464695"/>
<Feature description="PubSubFeature" ID="587464696"/>
<Feature description="PubSubFeature" ID="50593757"/>
<!-- <Feature description="PubSubFeature" ID="50593756"/> -->
<Feature description="PON_PRN" ID="540016640"/>
</FeatureData>
Step 4-
Try publish and Subscribing to the feature ID
eg :
    <parameter name="Publish" value="1#10#10#100#Itron#1#0#0#0#255#255#50593756#1#0" />
  <parameter name="Subscribe" value="1#0#50593756#1"/>
step 5-
No GOT message seen in the 1sec log.
(only ADD and PUBLISH success seen)
Step 6-
Check the PolicyViolationStatistics table.
#sqlite3 -header /usr/share/itron/database/muse01.db " select * from PolicyViolationStatistics;"
Step 7-
Violation with constraint id 15  should be recorded

===================================================================================================
"""
import pytest
import time
from tests.test_meters.utils import install_agent_and_activate, refresh_container, P2P_AGENT
from tests.test_meters.rohan_utils import Config_push,agent_Config_collect,file_content_change,Container_stop,Dataserver_refresh,is_log_file_available,agent_policy_collect,policy_file_push,absolute_command
# AUTOGENERATED Test Case 2064796
# @pytest.mark.skip(reason="TODO: unimplemented test case")
@pytest.mark.regress_nightly
@pytest.mark.slow1020
#@pytest.mark.regress_smoke
@pytest.mark.suite_id("2063316")
@pytest.mark.test_case("2064796")
def test_case(preinstalled_meter, logger, workdir):
    logger.trace("Executing Test Case 2064796 - Verify if the requesting AgentID requesting access for feature ID\'s but the access is not granted for few of the feature ID\'s then it should log a violation in Policy Digest table -ItronPubSubAgent")
    logger.trace('Step 1')
    install_agent_and_activate(preinstalled_meter,logger,P2P_AGENT)
    agent_UID = '50528119'
    policy_file=preinstalled_meter.sql_query(f'select * from DIPolicyFile where agentid ={agent_UID}')
    assert policy_file, "Policy file not present"
    initial_max_timestamp = preinstalled_meter.sql_query(f'select max(timestamp) from PolicyViolationStatistics where ViolationParameter=50593756 and AgentId={agent_UID};')
    logger.info('initial_max_timestamp %s',initial_max_timestamp)
    agent = P2P_AGENT
    Feature_id = 50593756
    try:
        logger.trace('step 3')
        old_word='<Feature description="PubSubFeature" ID="50593756"/>'
        new_word=f'<!--{old_word}-->'
        file = agent_policy_collect(preinstalled_meter,agent,base_dir=workdir,force=True)
        file_content_change(preinstalled_meter,file,old_word,new_word)
        # file_name = "'PolicyFile.xml'"
        policy_file_push(preinstalled_meter,agent)
        
        logger.trace('Step 4')
        file = agent_Config_collect(preinstalled_meter,agent,Feature_id,base_dir=workdir)
        old_publish='value="1#0#0#0#Itron#0#0#0#0#255#255#50593756#1#0"'
        new_publish='value="1#10#10#100#Itron#1#0#0#0#255#255#50593756#1#0"'
        old_Subscribe='value="0#0#50593756#1"'
        new_Subscribe='value="1#0#50593756#1"'
        file_content_change(preinstalled_meter,file,old_publish,new_publish)
        file_content_change(preinstalled_meter,file,old_Subscribe,new_Subscribe)
        Config_push(preinstalled_meter,Feature_id)

        logger.trace('Step 5')
        stop = time.time() + (5*60)
        while time.time()<=stop:
            code, stat = preinstalled_meter.command_with_code('cat /tmp/container/50593792/rootfs/tmp/agent/0302ff77/0302ff77_log')
            if code !=0:
                continue
            else:
                output = ('').join(stat)
                logger.info("add & pub %s",output)
                if('Add,' in output and 'Pub,' in output and 'Got,' not in output):
                    break
            time.sleep(10)
        assert 'Add,' in output and 'Pub,' in output and 'Got,' not in output, "timeout for condition check"
        logger.trace('step 6')
        stop = time.time() + (3*60)
        while time.time()<=stop:
            constraintid = []
            if initial_max_timestamp[0]!='':
                cmd1=f'select ConstraintID from PolicyViolationStatistics where ViolationParameter=50593756 and AgentId={agent_UID} and  timestamp>{initial_max_timestamp[0]}'
                constraintid_data=preinstalled_meter.sql_query(cmd1)
                logger.trace(constraintid_data)
            else:
                cmd2=f'select ConstraintID from PolicyViolationStatistics where ViolationParameter=50593756 and AgentId={agent_UID}'
                constraintid_data=preinstalled_meter.sql_query(cmd2)
                logger.trace(constraintid_data)
            if constraintid_data:
                constraintid = [x for x in constraintid_data if('15' in x)]
            if (len(constraintid)!=0):
                break
            time.sleep(6)
        logger.trace('step 7')
        assert '15' in constraintid[0],"timeout for condition check"

    finally:
         agent_policy_collect(preinstalled_meter,agent,base_dir=workdir,force=True)
         policy_file_push(preinstalled_meter,agent)

        # Update the Data file at the FeatureConfiguration table at Initial State
         agent_Config_collect(preinstalled_meter,agent,Feature_id,base_dir=workdir,force=True)
         Config_push(preinstalled_meter,Feature_id)