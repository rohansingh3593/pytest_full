"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase2
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/2282669
===================================================================================================
Test Case      : 2282669
Description    : Verify GMR removes Agent ,DI Policy File and voilations Digest for ItronPubSub2
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Step 1 - 
Do GMR #/usr/share/itron/scripts/GlobalMeterReset.sh
Step 2 - 
Meter should be reset

Step 3 - 
Once the meter is powered back. check for the agents,policyfile and violation table

Step 4 - 
All should be removed

Step 5 - 
sqlite3 --header /usr/share/itron/database/muse01.db \"select * from agentinformation\"

Step 6 - 
No such table

Step 7 - 
sqlite3 --header /usr/share/itron/database/muse01.db \"select * from DIPolicyFile\"

Step 8 - 
No such table

Step 9 - 
sqlite3 -header /usr/share/itron/database/muse01.db \" select * from PolicyViolationStatistics;\"

Step 10 - 
No such table


===================================================================================================

"""
import pytest,time
from tests.test_meters.utils import install_agent_and_activate ,DI_TEST_AGENT
# AUTOGENERATED Test Case 2282669

# @pytest.mark.skip(reason="TODO: unimplemented test case")
@pytest.mark.regress_nightly
#@pytest.mark.regress_smoke
@pytest.mark.suite_id("2063316")
@pytest.mark.test_case("2282669")
@pytest.mark.gmr_meter
@pytest.mark.parametrize("agent_info", [DI_TEST_AGENT])
def test_case(preinstalled_meter, logger, agent_info):
    logger.trace("Executing Test Case 2282669 - Verify GMR removes Agent ,DI Policy File and voilations Digest for ItronPubSub2")
    logger.trace('Step 1')
    install_agent_and_activate(preinstalled_meter,logger,agent_info)
    agentinformation_data=preinstalled_meter.sql_query('select AgentName from agentinformation')
    assert 'DITestAgent' in agentinformation_data
    policy_file=preinstalled_meter.sql_query('select PolicyFile from DIPolicyFile where agentid = 50528128')
    assert len(policy_file) !=0
    preinstalled_meter.gmr()
    logger.trace('Step 2')
    """Meter should be reset"""
    logger.trace('Step 3')
    """Once the meter is powered back. check for the agents,policyfile and violation table"""   
    logger.trace('Step 4')
    """All should be removed"""
    logger.trace('Step 5')
    logger.trace('Step 6')
    logger.trace('Step 7')
    logger.trace('Step 8')
    logger.trace('Step 9')
    tables=preinstalled_meter.sql_query('.tables')  
    tables = [" ".join(t.split()) for t in tables]
    logger.trace('Step 10')
    table_list = ['DIPolicyFile', 'AgentInformation', 'PolicyViolationStatistics']
    for teble in table_list:
        assert teble not in tables


