"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase2
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/2046644
===================================================================================================
Test Case      : 2046644
Description    : Verify if the main fields of AgentFeatureDataCounter table are available
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Step 1 - 
AgentId INTEGER NOT NULL,
  FeatureId INTEGER NOT NULL,

  DailyUpstreamDataSent INTEGER NOT NULL DEFAULT 0,

  P2PBroadcastDataSentPlc INTEGER NOT NULL DEFAULT 0,
  P2PBroadcastDataSentRf INTEGER NOT NULL DEFAULT 0,
  P2PUnicastDataSentRf INTEGER NOT NULL DEFAULT 0,

  DailyAlarmMessagesSent INTEGER NOT NULL DEFAULT 0,

  P2PBroadcastStaticDataSentPlc INTEGER NOT NULL DEFAULT 0,
  P2PBroadcastStaticDataSentRf INTEGER NOT NULL DEFAULT 0,
  P2PUnicastStaticDataSentRf INTEGER NOT NULL DEFAULT 0,

  P2PBroadcastIBDailyDataSentCounterPlc INTEGER NOT NULL DEFAULT 0,
  P2PBroadcastIBDailyDataSentCounterRf INTEGER NOT NULL DEFAULT 0,
  P2PUnicastDailyDataSentCounterRf INTEGER NOT NULL DEFAULT 0,

  P2PBroadcastIB1hrDataSentCounterPlc INTEGER NOT NULL DEFAULT 0,
  P2PBroadcastIB1hrDataSentCounterRf INTEGER NOT NULL DEFAULT 0,
  P2PUnicast1hrDataSentCounterRf INTEGER NOT NULL DEFAULT 0,

  TimeStamp INTEGER NOT NULL



Step 2 - 
The table AgentFeatureDataCounter will have value only after the agent installation., this can be check using the command
 # sqlite3 -header /usr/share/itron/database/muse01.db "PRAGMA TABLE_INFO(AgentFeatureDataCounter)"



===================================================================================================


"""
import pytest
from tests.test_meters.utils import install_agent_and_activate, DI_TEST_AGENT
from tests.test_meters.rohan_utils import absolute_command

# AUTOGENERATED Test Case 2046644

# @pytest.mark.skip(reason="TODO: unimplemented test case")
@pytest.mark.regress_nightly
# @pytest.mark.regress_smoke
@pytest.mark.suite_id("2046635")
@pytest.mark.test_case("2046644")
def test_case(preinstalled_meter, logger):
    logger.trace("Executing Test Case 2046644 - Verify if the main fields of AgentFeatureDataCounter table are available")
    
    install_agent_and_activate(preinstalled_meter,logger,DI_TEST_AGENT)
    logger.trace('Step 1')
    fields =['AgentId', 'FeatureId', 'DailyUpstreamDataSent', 'P2PBroadcastDataSentPlc', 'P2PBroadcastDataSentRf', 'P2PUnicastDataSentRf', 
              'DailyAlarmMessagesSent', 'P2PBroadcastStaticDataSentPlc', 'P2PBroadcastStaticDataSentRf', 'P2PUnicastStaticDataSentRf', 
              'P2PBroadcastIBDailyDataSentCounterPlc', 'P2PBroadcastIBDailyDataSentCounterRf', 'P2PUnicastDailyDataSentCounterRf', 
              'P2PBroadcastIB1hrDataSentCounterPlc', 'P2PBroadcastIB1hrDataSentCounterRf', 'P2PUnicast1hrDataSentCounterRf', 'TimeStamp']
    stdout = absolute_command(preinstalled_meter,'sqlite3 /usr/share/itron/database/muse01.db "PRAGMA TABLE_INFO(AgentFeatureDataCounter)"')
    table_headers = [data.split('|')[1] for data in stdout ]
    logger.trace(table_headers)
    logger.trace('Step 2')
    for x in fields:
        assert x in table_headers,f"{x} field not present"


