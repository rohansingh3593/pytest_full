"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase2
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/2071683
===================================================================================================
Test Case      : 2071683
Description    : uninstall agent and verify the Policy file is removed from the specified location
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Step 1 - Ensure Agent (any) is available with Policy file in DIPolicyFile Table
Step 2 sqlite3 --header /usr/share/itron/database/muse01.db "select * from AgentRegistration"
sqlite3 --header /usr/share/itron/database/muse01.db "select * from DIPolicyFile"
Step 3 GMR
Step 4
Both the Tables from previous steps should be removed.

===================================================================================================


"""
import pytest,time
from tests.test_meters.utils import  install_agent_and_activate ,DI_TEST_AGENT

# AUTOGENERATED Test Case 2071683

# @pytest.mark.skip(reason="TODO: unimplemented test case")
@pytest.mark.slow1020 # test takes 10 to 20 minutes
@pytest.mark.regress_nightly
#@pytest.mark.regress_smoke
@pytest.mark.suite_id("2045263")
@pytest.mark.test_case("2071683")
@pytest.mark.gmr_meter
@pytest.mark.parametrize("agent_info", [DI_TEST_AGENT])
def test_case(preinstalled_meter, logger, agent_info,di_package):
    logger.trace("Executing Test Case 2071683 - uninstall agent and verify the Policy file is removed from the specified location")

    logger.trace('Step 1')

    install_agent_and_activate(preinstalled_meter,logger,agent_info)
    agentinformation_data=preinstalled_meter.sql_query('select AgentName from agentinformation')
    assert agent_info.name in agentinformation_data

    # Getting the Agent ID form the Agent Information Table
    query=f'select AgentUID from agentinformation where AgentName = "{agent_info.name}";'
    agent_id=preinstalled_meter.sql_query(query)[0]

    policy_file=preinstalled_meter.sql_query(f'select PolicyFile from DIPolicyFile where agentid ={agent_id}')
    assert policy_file, 'Policy file is not present on specified path'

    try:
        logger.trace('Step 3')
        preinstalled_meter.gmr()
        logger.trace('Step 4')
        tables=preinstalled_meter.sql_query('.tables')  
        logger.trace('Step 10')
        table_list = ['DIPolicyFile', 'AgentInformation']
        for table in table_list:
            assert table not in tables,f"{table} is present after the GMR"
    finally:
        preinstalled_meter.install(file = di_package)