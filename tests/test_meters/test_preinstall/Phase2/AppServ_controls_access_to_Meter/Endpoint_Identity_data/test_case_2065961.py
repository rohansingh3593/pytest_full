
"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase2
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/2065961
===================================================================================================
Test Case      : 2065961
Description    : Verify  without DI Policy file , default regular LIDS get access 
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Step 1 - 
Verify  without DI Policy file the  default LIDS get access to Identity DataTransactionProcess
TransactionProcess --event="MUSE_V1;ReadLid;ILID_SYSTEM_FW_VERSION";
TransactionProcess --event="MUSE_V1;ReadLid;ILID_BASE_METER_FORM";
TransactionProcess --event="MUSE_V1;ReadLid;ILID_DATASERVER_APPSERV_FW_VERSION";

Step 2 - 
must get the version 
Step 3 - 


Step 4 - 



===================================================================================================


"""
import pytest
import time
from tests.test_meters.utils import install_agent_and_activate, refresh_container, DI_TEST_AGENT,Active_Containers
from tests.test_meters.rohan_utils import Container_stop,absolute_command

# AUTOGENERATED Test Case 2065961

#@pytest.mark.skip(reason="TODO: unimplemented test case")
@pytest.mark.regress_nightly
@pytest.mark.regress_smoke
@pytest.mark.suite_id("2063312")
@pytest.mark.test_case("2065961")
@pytest.mark.parametrize("agent_info", [DI_TEST_AGENT])
def test_case(preinstalled_meter,logger,di_version,agent_info,fw_ver):
    logger.trace("Executing Test Case 2065961 - Verify  without DI Policy file , default regular LIDS get access ")


    install_agent_and_activate(preinstalled_meter, logger, agent_info)
    # Getting the Agent ID form the Agent Information Table
    query=f'select AgentUID from agentinformation where AgentName = "{agent_info.name}";'
    agent_id=preinstalled_meter.sql_query(query)[0]

    try:

        time_out=time.time() + 30
        while time_out>time.time():
            preinstalled_meter.sql_query(f"select writefile(\"PolicyFile.xml\",PolicyFile) from DIPolicyFile where AgentId=\"{agent_id}\"")
            status = 'PolicyFile.xml' in preinstalled_meter.ls('/root')
            if status:
                logger.info("PolicyFile.xml got from the DIPolicyFile table")
                break
            time.sleep(5)

        assert status ,f"PolicyFile.xml is not present in root"   
        logger.trace('Step 1')
        preinstalled_meter.sql_query(f"delete from DIPolicyFile where agentid={agent_id}")

        # Stop the Container
        Container_stop(preinstalled_meter,agent_info.container_id)
        # Start the container
        refresh_container(preinstalled_meter,logger,20*60)
        assert agent_info.container_id in Active_Containers(preinstalled_meter),f"Container {agent_info.container_id} is not start after the Container Start command"

        fwver, asver = preinstalled_meter.version_info()
        logger.trace('Step 2')

        assert fw_ver == fwver ,'Firmware VERSION version  is not get from TransactionProcess'
        assert di_version == asver ,'Appserve VERSION version  is not get from TransactionProcess'

        logger.trace('Step 3')
        logger.trace('Step 4')


        
    finally:
        preinstalled_meter.sql_query(f"insert into DIPolicyFile(AgentId,TimeStamp,PolicyFile) VALUES({agent_id},0,readfile(\"PolicyFile.xml\"))")
        absolute_command(preinstalled_meter,'rm /root/PolicyFile.xml')

        # Stop the Container
        Container_stop(preinstalled_meter,agent_info.container_id)
        # Start the container
        refresh_container(preinstalled_meter,logger,20*60)
        assert agent_info.container_id in Active_Containers(preinstalled_meter),f"Container {agent_info.container_id} is not start after the Container Start command"

