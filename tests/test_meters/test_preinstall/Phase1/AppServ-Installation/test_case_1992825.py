
"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase1
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/1992825
===================================================================================================
Test Case      : 1992825
Description    : Verify all the Tables are been created on the Database
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Step 1 - 
Check the following 10 new Tables are getting created after AppService installationThe following
command would list all the tables available:# sqlite3 --header /usr/share/itron/database/muse01.db
\".tables\"

Step 2 - 
All new tables should be present on the DB.1.AgentData\n2.AgentEvents\n3.AgentInformation\n4.AgentMa
ilbox\n5.AgentPolicy\n6.AgentRegistration\n7.DeviceArchive\n8.DeviceArchiveEntry\n9.DIDevice\n10.Fea
tureConfiguration


===================================================================================================


"""
import pytest
from tests.test_meters.utils import install_agent_and_activate,HAN_AGENT

# AUTOGENERATED Test Case 1992825

# @pytest.mark.skip(reason="TODO: unimplemented test case")
@pytest.mark.slow1020 # test takes 10 to 20 minutes
@pytest.mark.regress_nightly
#@pytest.mark.regress_smoke
@pytest.mark.suite_id("1990123")
@pytest.mark.test_case("1992825")
def test_case(preinstalled_meter, logger):
    logger.trace("Executing Test Case 1992825 - Verify all the Tables are been created on the Database")

    logger.trace('Step 1')
    install_agent_and_activate(preinstalled_meter, logger, HAN_AGENT)
    tables = preinstalled_meter.sql_query('.tables')
    tables = [" ".join(t.split()) for t in tables]
    logger.trace('Step 2')
    table_list = ['AgentData',
                    'AgentEvents',
                    'AgentInformation',
                    'AgentMailbox',
                    'AgentPolicy',
                    'AgentRegistration',
                    'DeviceArchive',
                    'DeviceArchiveEntry',
                    'DIDevice',
                    'FeatureConfiguration' ]
    for teble in table_list:
        assert teble in tables

