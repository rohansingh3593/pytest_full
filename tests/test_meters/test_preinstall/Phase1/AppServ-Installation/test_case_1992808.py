
"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase1
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/1992808
===================================================================================================
Test Case      : 1992808
Description    : Verify the ApplicationServices upgrade will not be affecting any of the processes running on the platform firmware
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Refer to: 1997741 - AppServ Upgrade via ImProv

Step 1 - 
AppServe upgrade via ImProv

Step 2 - 


Step 3 - 
All the process which are independent to AppServe component should continue to work.

Check with ps command  ps | grep <process_name>
 
ps | grep -i dlmsd
ps | grep -i NetMgrd
ps | grep-i eismd
ps | grep -i lxc
ps | grep -i cosemd
ps | grep - i container
ps | grep -i monit
ps | grep -i ImgMgrd

Step 4 - 
DLMSd, NetManager, EISMd,Monit Process, Image Manager, Container Manager, COSEMd and LXC container should work.

Step 5 - 
All the process which are dependent to AppServe component should get restarted.
ps | grep Dataserver

Step 6 -
ApplicationService Dataserver shuld get started


===================================================================================================


"""
import pytest
from tests.test_meters.utils import filter_ps,install_agent_and_activate,wait_for_agents,HAN_AGENT

# AUTOGENERATED Test Case 1992808

# @pytest.mark.skip(reason="TODO: unimplemented test case")
@pytest.mark.regress_nightly
@pytest.mark.slow1020 # test takes 10 to 20 minutes
@pytest.mark.suite_id("1990123")
@pytest.mark.test_case("1992808")
@pytest.mark.parametrize("agent_info", [HAN_AGENT])
def test_case(preinstalled_meter, logger,agent_info, di_package_2k):
    logger.trace("Executing Test Case 1992808 - Verify the ApplicationServices upgrade will not be affecting any of the processes running on the platform firmware")

    logger.trace('Step 1')
    install_agent_and_activate(preinstalled_meter, logger, agent_info)
    fwver,asver1 = preinstalled_meter.version_info()
    preinstalled_meter.install(file=di_package_2k)
    fwver,asver2 = preinstalled_meter.version_info()
    logger.trace('Step 2')
    assert asver1 != asver2
    logger.trace('Step 3')
    logger.trace('Checking for dlmsd process')
    dlmsd = filter_ps(preinstalled_meter,"dlmsd")
    logger.trace(dlmsd)
    logger.trace('Checking for NetMgrd process')
    NetMgrd = filter_ps(preinstalled_meter,"NetMgrd")
    logger.trace(NetMgrd)
    logger.trace('Checking for eismd process')
    eismd = filter_ps(preinstalled_meter,"eismd")
    logger.trace(eismd)
    wait_for_agents(preinstalled_meter, logger, [HAN_AGENT], 20*60)
    logger.trace('Checking for lxc process')
    lxc = filter_ps(preinstalled_meter,"lxc-start")
    logger.trace(lxc)
    logger.trace('Checking for cosemd process')
    cosemd = filter_ps(preinstalled_meter,"cosemd")
    logger.trace(cosemd)
    logger.trace('Checking for CMD process')
    CMD = filter_ps(preinstalled_meter,"ContainerManager")
    logger.trace(CMD)
    logger.trace('Checking for monit process')
    monit = filter_ps(preinstalled_meter,"monit")
    logger.trace(monit)
    logger.trace('Checking for ImgMgrd process')
    ImgMgrd = filter_ps(preinstalled_meter,"ImgMgrdMain")
    logger.trace(ImgMgrd)

    logger.trace('Step 4')
    assert "dlmsd" in dlmsd[0][4]
    assert "NetMgrd" in NetMgrd[0][4]
    assert "eismd" in eismd[0][4]
    assert "lxc-start" in lxc[0][4]
    assert "cosemd" in cosemd[0][4]
    assert "ContainerManager" in CMD[0][4]
    assert "monit" in monit[0][4]
    assert "ImgMgrd" in ImgMgrd[0][4]


    logger.trace('Step 5')
    logger.trace('Checking for ds process')
    ds = filter_ps(preinstalled_meter, "DataServer_Daemon")
    assert "DataServer_Daemon" in ds[0][4]

