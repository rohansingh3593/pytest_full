"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase1/AppServ-Installation
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/1993223
===================================================================================================
Test Case      : 1993223
Description    : CMStopOneContainer
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Step 1 - 
Check whether the container gets stopped when the DBus StopOne container is issued. dbus-send
--print-reply --system --dest=com.itron.museplatform.ContainerManager
/com/itron/museplatform/ContainerManager com.itron.museplatform.ContainerManager.StopOneContainer
string:\'abc\'where abc is the container name.

Step 2 - 
Desired container should be stopped with the DBus StopOne container signal.

Step 3 - 
Check the stopped container is not runningps | grep -i contain

Step 4 - 
The container should not run


===================================================================================================


"""
import pytest
import time

from tests.test_meters.utils import Third_Party_PubSub_AGENT,install_agent_and_activate
import re

# AUTOGENERATED Test Case 1993223
#@pytest.mark.skip(reason="TODO: unimplemented test case")
@pytest.mark.regress_nightly
@pytest.mark.slow1020 # test takes 10 to 20 minutes
@pytest.mark.containermgr # container manager test
#@pytest.mark.regress_smoke
@pytest.mark.suite_id("1993280")
@pytest.mark.test_case("1993223")
@pytest.mark.parametrize("agent_info", [Third_Party_PubSub_AGENT])
def test_case(preinstalled_meter, logger,agent_info):
    logger.trace("Executing Test Case 1993223 - CMStopOneContainer")
    logger.trace('Step 1')
    try:
        install_agent_and_activate(preinstalled_meter,logger,agent_info)
        containers_list=preinstalled_meter.ls("/tmp/container")
        assert '587464704' in containers_list
        container_data=preinstalled_meter.command('dbus-send --print-reply --system --dest=com.itron.museplatform.ContainerManager /com/itron/museplatform/ContainerManager com.itron.museplatform.ContainerManager.StopOneContainer string:587464704')
        logger.trace('Step 2')
        assert 'string "Ok"' in container_data[-1]
        """Desired container should be stopped with the DBus StopOne container signal."""
        logger.trace('Step 3')
        stop = time.time() + (90)
        while time.time()<=stop:
            contain_data=preinstalled_meter.command('ps | grep -i contain')
            logger.trace('Step 4')
            contain_data=([x for x in contain_data if '587464704' in x])
            if(len(contain_data)==0):
                break
            else:
                time.sleep(10)   
        assert len(contain_data)==0
    
    finally:
        preinstalled_meter.command('dbus-send --system --dest=com.itron.museplatform.ContainerManager /com/itron/museplatform/ContainerManager com.itron.museplatform.ContainerManager.Refresh')
        stop = time.time() + 60
        while time.time()<=stop:
            ret = preinstalled_meter.command('ps | grep -i contain')
            logger.trace(ret)
            output = [x for x in ret if('lxc-start' in x.split()[4] and 'Z' not in x.split()[3])]
            if(len(output)!=0):
                break
            else:
                time.sleep(5)
        assert 'lxc-start' in output[0],'ContainerManager not Refresh'
        
