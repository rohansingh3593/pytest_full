"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase1/AppServ-Installation
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/1993227
===================================================================================================
Test Case      : 1993227
Description    : CMContainerOverlays
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Step 1 - 
Verify that all overlays related to container are present in /usr/share/itron/container-overlays
directoryls /usr/share/itron/container-overlays

Step 2 - 
All the required overlay should be present in the overlay directory


===================================================================================================


"""
import pytest
from tests.test_meters.utils import install_agent_and_activate,P2P_AGENT

# AUTOGENERATED Test Case 1993227
# @pytest.mark.skip(reason="TODO: unimplemented test case")
@pytest.mark.regress_nightly
#@pytest.mark.regress_smoke
@pytest.mark.suite_id("1993280")
@pytest.mark.test_case("1993227")
def test_case(preinstalled_meter, logger):
    logger.trace("Executing Test Case 1993227 - CMContainerOverlays")
    logger.trace('Step 1')
    install_agent_and_activate(preinstalled_meter,logger,P2P_AGENT)
    dir="/usr/share/itron/container-overlays"
    content=preinstalled_meter.ls(dir)
    logger.trace('Step 2')
    overlay=[i["OverlayPath"].replace(f"{dir}/","") for i in  preinstalled_meter.get_table("overlaysetup")]
    res=all(i in overlay for i in content)
    assert res,f"Required overlay is not present in the overlay directory {dir}"
