"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase1/AppServ-Installation
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/1993234
===================================================================================================
Test Case      : 1993234
Description    : Verify TempFileSystemSize value of “CONTAINERSETUP” table matches with the df output.
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Step 1 -
Install the container on the meter using agent package

Step 2 -
Container and agent should be running fine

Step 3 -
Check the value of TempFileSystemSize from the 'CONTAINERSETUP' table using command:
 "ImProvHelper.sh --ReadTable containersetup"

Step 4 -
TempFileSystemSizeBytes has a value 8000000 when installed using agent package
Reading containersetup
GroupId|UID|DesiredState|ContainerStartDelayMS|TempFilesystemSizeBytes|PriorityLevel|IgnoreResourceUsage|FriendlyName|DbusConnectionType
1|587464704|1|0|8000000|20|0|3rdParty|1

Step 5 -
Verify the TempFileSystemSize value matches with the df output command on the host system

df /tmp/container/50593792/
df  /tmp/container/587464704/

Step 6 -
df output for tmpfs should match to TempFileSystemSize.

Filesystem           1024-blocks    Used Available Use% Mounted on
tmpfs                     7816(7816*1024~=  8000000)     80      7736   1% /tmp/container/50593792


Filesystem           1024-blocks    Used Available Use% Mounted on
tmpfs                     7816(7816*1024~=  8000000)        80      7736   1% /tmp/container/587464704




===================================================================================================


"""
import pytest
import math
import numpy
from tests.test_meters.utils import install_multiple_agents_and_activate,HAN_AGENT,Third_Party_PubSub_AGENT, filter_ps, is_process_running

# AUTOGENERATED Test Case 1993234

@pytest.mark.regress_nightly
@pytest.mark.suite_id("1993280")
@pytest.mark.test_case("1993234")
def test_case(preinstalled_meter, logger):
    logger.trace("Executing Test Case 1993234 - Verify TempFileSystemSize value of  CONTAINERSETUP  table matches with the df output.")

    logger.trace('Step 1')
    agent_list = [HAN_AGENT,Third_Party_PubSub_AGENT]
    install_multiple_agents_and_activate(preinstalled_meter, logger, agent_list)
    logger.trace('Step 2')

    try:
        for agent in agent_list:
            assert is_process_running(preinstalled_meter, f"{agent.name}_Daemon")
    except BaseException:
        logger.trace(preinstalled_meter.command("ps -w | grep containe"))
        raise

    # get dbus processes and check for containers
    processes = filter_ps(preinstalled_meter,'dbus-daemon')
    output = [con for con in processes if '50593792' in con[5] or '587464704' in con[5]]
    assert len(output)==2
    logger.trace('Step 3')
    stdout = preinstalled_meter.command("ImProvHelper.sh --ReadTable containersetup")
    output = [x for x in stdout if "8000000" in x]
    logger.trace('Step 4')
    assert len(output)!=0
    logger.trace('Step 5')
    containers = ['50593792','587464704']
    for con in containers:
        df_output = preinstalled_meter.command(f"df /tmp/container/{con}/")
        logger.trace('container: %s', con)
        logger.trace('df_output: %s', df_output)
        size = int(df_output[1].split()[1])
        logger.trace('Step 6')
        tol_size = size*1024
        abs_tol = (numpy.mod(tol_size,8000000))
        assert math.isclose(tol_size, 8000000, abs_tol = abs_tol)






