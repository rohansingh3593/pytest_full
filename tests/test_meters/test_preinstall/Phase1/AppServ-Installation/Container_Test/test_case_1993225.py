"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase1/AppServ-Installation
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/1993225
===================================================================================================
Test Case      : 1993225
Description    : CMRefresh
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Step 1 - 
Ensure the container manager is up and running

Step 2 - 
Install an Agent.
step 3-
Check the PID of lxc (linux container)
dbus-send --type=signal --system --dest=com.itron.museplatform.ContainerManager 
/com/itron/museplatform/ContainerManager com.itron.museplatform.ContainerManager.StopAllContainer

dbus-send--type=signal --system --dest=com.itron.museplatform.ContainerManager
/com/itron/museplatform/ContainerManager
com.itron.museplatform.ContainerManager.Refresh

wait for some time 
step 4-
after refresh Check the PID of lxc (linux container) 
and check both lxc PID after refresh and lxc PID before refresh should not be same  "
===================================================================================================


"""
import pytest
import time
from tests.test_meters.utils import DI_TEST_AGENT,install_agent_and_activate,is_process_running
# AUTOGENERATED Test Case 1993225

# @pytest.mark.skip(reason="TODO: unimplemented test case")
@pytest.mark.regress_nightly
#@pytest.mark.regress_smoke
@pytest.mark.suite_id("1993280")
@pytest.mark.test_case("1993225")
@pytest.mark.parametrize("agent_info", [DI_TEST_AGENT])
def test_case(preinstalled_meter, logger,agent_info):
    logger.trace("Executing Test Case 1993225 - CMRefresh")
    logger.trace('Step 1')  
    conatiner=preinstalled_meter.command("ps | grep -i contain") 
    prev_con_pid = [x.split()[0] for x in conatiner if 'ContainerManager' in x.split()[4]]
    logger.trace("Before Agent Installation ContainerManager PID is :"+prev_con_pid[0])
    assert len(prev_con_pid)!=0
    logger.trace('Step 2')
    install_agent_and_activate(preinstalled_meter, logger, agent_info,force=True)
    conatiner_after=preinstalled_meter.command("ps | grep -i contain") 
    cur_con_pid = [x.split()[0] for x in conatiner_after if 'ContainerManager' in x.split()[4]]
    logger.trace("After Agent Installation ContainerManager PID is :"+cur_con_pid[0])
    assert prev_con_pid[0] != cur_con_pid[0]
    logger.trace('step 3')
    lxc_before_refresh=preinstalled_meter.command("ps | grep -i lxc")
    prev_lxc_pid = [x.split()[0] for x in lxc_before_refresh if 'lxc-start' in x.split()[4] and 'Z' not in x.split()[3]]
    logger.trace("Before refresh LXC PID is :"+prev_lxc_pid[0])
    preinstalled_meter.command("dbus-send --type=signal --system --dest=com.itron.museplatform.ContainerManager /com/itron/museplatform/ContainerManager com.itron.museplatform.ContainerManager.StopAllContainer")
    stop = time.time() + (5*60)
    while time.time()<=stop:
        stdout= preinstalled_meter.command( 'ps | grep -i lxc')
        output=[x for x in stdout if("lxc-start" in x.split()[4])]
        if(len(output)==0):
                break
        time.sleep(10)
    preinstalled_meter.command("dbus-send --type=signal --system --dest=com.itron.museplatform.ContainerManager /com/itron/museplatform/ContainerManager com.itron.museplatform.ContainerManager.Refresh")
    stop = time.time() + (5*60)
    while time.time()<=stop:
        stdout= preinstalled_meter.command( 'ps | grep -i lxc')
        cur_lxc_pid=[x.split()[0] for x in stdout if("lxc-start" in x.split()[4] and "Z" not in x.split()[3])]
        if(len(cur_lxc_pid)!=0):
                break
        time.sleep(10)
    logger.trace("After refresh LXC PID is :"+cur_lxc_pid[0])
    logger.trace('step 4')
    assert  cur_lxc_pid[0] != prev_lxc_pid[0]

