"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase1
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/1993142
===================================================================================================
Test Case      : 1993142
Description    : Verify AppServe FW Download Logging
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Step 1 - 
Install AppServices Package

Step 2 - 


Step 3 - 
Run command 
ls /tmp/logs/ImProv/DEBUG/ImProv*  | wc -l

Step 4 - 
Result shall be a non zero number
Eg: 1

Step 5 - 
Run command 
ls /mnt/pouch/LifeBoatLogs/ImProv* | wc -l

Step 6 - 
Result shall be a non zero number
Eg: 11

Step 7-
Run command 
ls /tmp/logs/TM-TP/INFORMATION/TM-TP* | wc -l

Step 8-
Result shall be a non zero number
Eg: 6


===================================================================================================


"""
import pytest
#AUTOGENERATED Test Case 1993142
#@pytest.mark.skip(reason="TODO: unimplemented test case")
@pytest.mark.regress_nightly
#@pytest.mark.regress_smoke
@pytest.mark.suite_id("1990123")
@pytest.mark.test_case("1993142")
def test_case(preinstalled_meter, logger):
    logger.trace("Executing Test Case 1993142 - Verify AppServe FW Download Logging")
    logger.trace('Step 1')
    """Appserve will installed with preinstalled_meter fixture"""
    logger.trace('Step 2')
    logger.trace('Step 3')
    DEBUG_output = preinstalled_meter.command('ls /tmp/logs/ImProv/DEBUG/ImProv*  | wc -l')
    logger.trace('Step 4')
    assert int(DEBUG_output[0])!=0, "ImProv logging is not successful"
    logger.trace('Step 5')
    LifeBoat_output = preinstalled_meter.command('ls /mnt/pouch/LifeBoatLogs/ImProv* | wc -l')
    logger.trace('Step 6')
    assert int(LifeBoat_output[0])!=0, "ImProv logging is not successful"
    logger.trace('Step 7')
    INFORMATION_output= preinstalled_meter.command('ls /tmp/logs/TM-TP/INFORMATION/TM-TP* | wc -l')
    logger.trace('Step 8') 
    assert int(INFORMATION_output[0])!=0, "ImProv logging is not successful"
    

