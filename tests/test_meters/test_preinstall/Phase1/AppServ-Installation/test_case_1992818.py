"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase1
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/1992818
===================================================================================================
Test Case      : 1992818
Description    : Verify the DataServer deamon is running after successful upgrade
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Step 1 - 
Make sure AppServices is running in the Meter.
TransactionProcess --event="MUSE_V1;ReadLid;ILID_DATASERVER_APPSERV_FW_VERSION;"

Step 2 - 
Ensure DataServer Daemon is showing up

ps | grep -i dataserver

Step 3 -
Install the latest AS package.

Step 4 -
After the upgradation of AppServices package into the meter.  Check the DataServer deamon using the below command
ps | grep -i dataserver



===================================================================================================


"""
import pytest
import time
# from tests.test_meters.utils import Third_Party_PubSub_AGENT,install_agent,filter_ps
# AUTOGENERATED Test Case 1992818

#@pytest.mark.skip(reason="TODO: unimplemented test case")
@pytest.mark.regress_nightly
@pytest.mark.slow1020 # test takes 10 to 20 minutes
#@pytest.mark.regress_smoke
@pytest.mark.suite_id("1990123")
@pytest.mark.test_case("1992818")
def test_case(preinstalled_meter, logger, di_package_2k, di_version_2k, di_version):
    logger.trace("Executing Test Case 1992818 - Verify the DataServer deamon is running after successful upgrade")
    logger.trace('Step 1')
    stdout = preinstalled_meter.command('TransactionProcess --event="MUSE_V1;ReadLid;ILID_DATASERVER_APPSERV_FW_VERSION;"')
    output = stdout[0].split("=")
    assert output[1] == di_version,"Appserve Not Installed"
    logger.trace('Step 2')
    cmd='ps | grep -i dataserver'
    stdout = preinstalled_meter.command(cmd)
    output = [x for x in stdout if('DataServer_Daemon'  in x.split()[4])]
    assert len(output) !=0,"Data server daemon is not up"
    logger.trace('Step 3')
    preinstalled_meter.install(file=di_package_2k)
    stdout = preinstalled_meter.command('TransactionProcess --event="MUSE_V1;ReadLid;ILID_DATASERVER_APPSERV_FW_VERSION;"')
    output = stdout[0].split("=")
    assert output[1] == di_version_2k,"Appserve Not Installed"
    logger.trace('Step 4')
    cmd='ps | grep -i dataserver'
    stdout = preinstalled_meter.command(cmd)
    output = [x for x in stdout if('DataServer_Daemon'  in x.split()[4])]
    assert len(output) !=0,"Data server daemon is not up"
    



