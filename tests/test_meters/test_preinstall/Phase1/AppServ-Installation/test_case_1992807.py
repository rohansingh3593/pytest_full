
"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase1
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/1992807
===================================================================================================
Test Case      : 1992807
Description    : Verify the ApplicationServices upgrade package is independently upgradable without changing the A7 firmware
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================

Step 1 - 
AppServ Upgrade via ImProv

Step 2 - 

Step 3 - 
Check the platfrom version using below command
ImProvHelper.sh --ReadLid ILID_SYSTEM_FW_VERSION

Step 4 - 
The Platform FW version should retain

===================================================================================================


"""
import pytest

# AUTOGENERATED Test Case 1992807

# @pytest.mark.skip(reason="TODO: unimplemented test case")
@pytest.mark.slow1020 # test takes 10 to 20 minutes
@pytest.mark.regress_nightly
#@pytest.mark.regress_smoke
@pytest.mark.suite_id("1990123")
@pytest.mark.test_case("1992807")
def test_case(preinstalled_meter, logger, di_package_2k):
    logger.trace("Executing Test Case 1992807 - Verify the ApplicationServices upgrade package is independently upgradable without changing the A7 firmware")

    logger.trace('Step 1')
    initial_fwver, initial_asver = preinstalled_meter.version_info()
    preinstalled_meter.install(file=di_package_2k)
    logger.trace('Step 2')
    fwver, cur_asver = preinstalled_meter.version_info()
    assert initial_asver != cur_asver,"Appserve not upgraded properly"
    logger.trace('Step 3')
    cur_fwver = preinstalled_meter.command('ImProvHelper.sh --ReadLid ILID_SYSTEM_FW_VERSION')
    logger.trace('Step 4')
    assert initial_fwver == cur_fwver[0]



