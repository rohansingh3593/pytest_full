
"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase1
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/1992823
===================================================================================================
Test Case      : 1992823
Description    : Verify the ApplicationServices package contains all components and libraries to establish DI Infrastructure to serve DI Agent applications on DI Container System
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Step 1 - 
Ensure all the libraries and bin files are available in the Meter after AppServices installation
(attached the appservicesLR.manifest)

Step 2 - 
/usr/bin and /usr/bin which are available in appservicesLR.manifest should be present in the Meter

Step 3 - 
Install an Agent and ensure it is functional.

Step 4 - 
ps grep | Agent should show the Agent daemon1sec log should be fine


===================================================================================================


"""
import pytest
from tests.test_meters.utils import DI_TEST_AGENT,install_agent_and_activate,is_process_running
# AUTOGENERATED Test Case 1992823

# @pytest.mark.skip(reason="TODO: unimplemented test case")
@pytest.mark.slow1020 # test takes 10 to 20 minutes
@pytest.mark.regress_nightly
#@pytest.mark.regress_smoke
@pytest.mark.suite_id("1990123")
@pytest.mark.test_case("1992823")
def test_case(preinstalled_meter, logger):
    logger.trace("Executing Test Case 1992823 - Verify the ApplicationServices package contains all components and libraries to establish DI Infrastructure to serve DI Agent applications on DI Container System")

    logger.trace('Step 1')
    """AppServe is install with preinstalled_meter fixture"""
    logger.trace('Step 2')
    agent  = DI_TEST_AGENT
    manifest_file = preinstalled_meter.command("cat /usr/share/itron/sha/appservicesLR.manifest")

    bin_files = ' '.join(preinstalled_meter.ls("/usr/bin"))
    lib_files = ' '.join(preinstalled_meter.ls("/usr/lib"))


    for line in  manifest_file:
        if "/usr/bin/" in line:
            file_name = line.split('/')[3]
            assert file_name in bin_files,f"{file_name} not present in meter"
        elif "/usr/lib/" in line:
            file_name = line.split('/')[3]
            assert file_name in lib_files,f"{file_name} not present in meter"

    logger.trace('Step 3')
    install_agent_and_activate(preinstalled_meter, logger, agent)

    logger.trace('Step 4')
    assert is_process_running(preinstalled_meter,f'{agent.name}_Daemon') ,f"{agent.name} is not functional"

