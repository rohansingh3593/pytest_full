
"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase1
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/1990745
===================================================================================================
Test Case      : 1990745
Description    : Verification of the RIVA firmware version
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Step 1 - 
Verify the RIVA firmware version using below command.\ncat /etc/Version.txt or  modversion.sh or
readlid.sh ILID_SYSTEM_FW_VERSION
TransactionProcess --event=\"MUSE_V1;WriteLid;ILID_SYSTEM_FW_VERSION;
TransactionProcess --event=\"MUSE_V1;ReadLid;ILID_SYSTEM_FW_VERSION;\"

Step 2 - 
The RIVA firmware version should be updated successfully.

===================================================================================================


"""
import pytest
import re

# AUTOGENERATED Test Case 1990745

# @pytest.mark.skip(reason="TODO: unimplemented test case")
@pytest.mark.regress_nightly
#@pytest.mark.regress_smoke
@pytest.mark.suite_id("1990124")
@pytest.mark.test_case("1990745")
def test_case(preinstalled_meter, logger):
    logger.trace("Executing Test Case 1990745 - Verification of the RIVA firmware version")

    logger.trace('Step 1')
    verion_from_file = preinstalled_meter.command('cat /etc/Version.txt')
    fwver = []
    for data in verion_from_file:
        ver = re.findall(r"Number: (\d+)",data)
        if ver:
            logger.trace(ver)
            fwver.append(ver[0])

    logger.trace(fwver)   
    logger.trace('Step 2')
    version_from_tp = preinstalled_meter.command('TransactionProcess --event="MUSE_V1;ReadLid;ILID_SYSTEM_FW_VERSION;"')
    version_from_tp = version_from_tp[0].split('=')
    assert version_from_tp[1].split('.') == fwver
    



