"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase1
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/1992805
===================================================================================================
Test Case      : 1992805
Description    : ApplicationServices package shall be upgradable via ImProvHelpher CLI command
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Refer to: 1997741 - AppServ Upgrade via ImProv

Step 1 - 
Transfer AppServe image to /mnt/common/  dir of meter.

Step 2 - 


Step 3 - 
Run  ImProvHelper.sh --image

Step 4 - 
Monitor the improv logs it should finish installing the FW. (meter will not go for reboot during
installation)

Step 5 - 
Check the AppServe Version\nImProvHelper.sh --ReadLid ILID_DATASERVER_APPSERV_FW_VERSION

Step 6 - 
Version should be updated according to the upgraded Appserv


===================================================================================================

"""
import pytest
import time
import os

# AUTOGENERATED Test Case 1992805

# @pytest.mark.skip(reason="TODO: unimplemented test case")
@pytest.mark.regress_nightly
@pytest.mark.slow1020 # test takes 10 to 20 minutes
#@pytest.mark.regress_smoke
@pytest.mark.suite_id("1990123")
@pytest.mark.test_case("1992805")
def test_case(preinstalled_meter, logger,di_package_image_files_2k,di_version_2k):
    logger.trace("Executing Test Case 1992805 - ApplicationServices package shall be upgradable via ImProvHelpher CLI command")

    logger.trace('Step 1')
    dir="/mnt/common"
    preinstalled_meter.put_file(di_package_image_files_2k,dir)

    logger.trace('Step 2')
    file_name=di_package_image_files_2k.split("/")[-1]
    
    logger.trace('Step 3')
    di_file=f"{dir}/{file_name}"
    preinstalled_meter.install(file=di_file,remote_file=True)
    logger.trace('Step 4')

    logger.trace('Step 5')
    version=preinstalled_meter.version_info()[1]

    logger.trace('Step 6')
    assert version==di_version_2k, "Version is not updated according to the upgraded AppServ"
