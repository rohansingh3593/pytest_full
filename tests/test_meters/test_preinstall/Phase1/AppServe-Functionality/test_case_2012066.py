"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase1
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/2012066
===================================================================================================
Test Case      : 2012066
Description    : Read obis codes data using cosem test tool
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Step 1 - 
Install given Apserve Software in meterCheck some obis codes Using Cosem test command and convert
output using dlms tool (attached) ex:# cosemtest getobis obis=1-9:0.2.0.255 attribute=2 class=1
sap=120Requesting class 1, OBIS 1-9:0.2.0.255 , Attribute2 Result: Success[0] 0A09312E372E3331342E30

Step 2 - 
Meter should update obis data in cosem
Copy / paste the output to the DLMS.exe - HEX to ASCII - Translate
Step 3 - 
Compare the version with the actual version running in the Meter.

Step 4 - 


Step 5 - 


Step 6 - 



===================================================================================================


"""
import pytest
import time
import re

# AUTOGENERATED Test Case 2012066

# @pytest.mark.skip(reason="https://dev.azure.com/itron/RnD/_workitems/edit/2940902")

@pytest.mark.regress_nightly
#@pytest.mark.regress_smoke
@pytest.mark.suite_id("2012056")
@pytest.mark.test_case("2012066")
def test_case(preinstalled_meter, logger,di_version,di_package):
    logger.trace("Executing Test Case 2012066 - Read obis codes data using cosem test tool")

    logger.trace('Step 1')
    """Appserve will installed with preinstalled_meter fixture"""
    logger.trace('Step 2')
    
    time_out=time.time() + 10*60
    count = 0
    while time_out>time.time():
        code,appserve_data=preinstalled_meter.command_with_code("cosemtest getobis obis=1-9:0.2.0.255 attribute=2 class=1 sap=120")
        if code ==0 :
            appserve_data = " ".join(appserve_data)
            value1 = "Success" in appserve_data

            byte_array=bytes.fromhex(appserve_data.split()[-1]) 
            ascii_Value_appserve=byte_array.decode()
            ascii_Value_appserve=re.sub(r'\s+','',ascii_Value_appserve)

            value2 = ascii_Value_appserve == di_version 

        if value1 and value2:
            break
        else:
            count +=1
            
        if count ==10:
            preinstalled_meter.gmr()
            preinstalled_meter.install(file = di_package) 

        time.sleep(10)

    logger.trace('Step 3')

    assert value1 , "obis code is not get successfully"
    assert value2 , "Version is not get successfully"

    logger.trace('Step 4')
    logger.trace('Step 5')
    logger.trace('Step 6')