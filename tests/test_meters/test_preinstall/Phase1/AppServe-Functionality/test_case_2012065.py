"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase1
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/2012065
===================================================================================================
Test Case      : 2012065
Description    : Verify FeatureConfiguration in Meter data base
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Step 1 - 
Install given Apserve Software in meter

Step 2 - 
Meter should update with new software

Step 3 - 
Install any agent in Meter and check FeatureConfiguration in database echo \"select * from
FeatureConfiguration;\" | sqlite3 -header /usr/share/itron/database/muse01.db

Step 4 - 
Agent Feature ID should match with Agent policy File

# sqlite3 --header /usr/share/itron/database/muse01.db "select * from FeatureConfiguration;"
FeatureId|FeatureVersion|ConfigurationId|Level|Data|LastUpdateTime
50536311|1|0|ыев|1646718234
50593756|1|0|ыев|1646718234
50540407|1|0|ыев|1646718234
50536311|0|0|5|1655790857
50540407|0|0|5|1655790857
50593756|0|16777216|4|1655792074
50593756|0|16777216|5|1655792074
# 



===================================================================================================


"""
import pytest
import re
from tests.test_meters.utils import install_agent_and_activate,DI_TEST_AGENT

# AUTOGENERATED Test Case 2012065

# @pytest.mark.skip(reason="TODO: unimplemented test case")
@pytest.mark.regress_nightly
#@pytest.mark.regress_smoke
@pytest.mark.suite_id("2012056")
@pytest.mark.test_case("2012065")
def test_case(preinstalled_meter, logger):
    logger.trace("Executing Test Case 2012065 - Verify FeatureConfiguration in Meter data base")
    
    logger.trace('Step 1')
    """we are using preinstalled_meter for instalation of packages"""
    logger.trace('Step 2')
    logger.trace('Step 3')
    
    install_agent_and_activate(preinstalled_meter, logger, DI_TEST_AGENT)
    fid_from_table=preinstalled_meter.sql_query('select FeatureId from FeatureConfiguration;')
    fid_from_policy_file = preinstalled_meter.sql_query('select PolicyFile from DIPolicyFile where agentid=50528128')
    logger.trace(fid_from_table)
    logger.trace(fid_from_policy_file)
    feature_list =[]
    for line in fid_from_policy_file:
        if('Feature ID' in line):
            id = re.sub(r"\D", "", line)
            feature_list.append(id)
    logger.trace(feature_list)
    logger.trace('Step 4')
    for id in feature_list:
        assert id in fid_from_table
   


