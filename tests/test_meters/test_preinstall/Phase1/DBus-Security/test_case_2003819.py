
"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase1
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/2003819
===================================================================================================
Test Case      : 2003819
Description    : Verify if all the log information is being captured successfully
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Step 1 -
Check the following errors in container & lxc logs:
1. CONTAINER_START_FAILURE
2. CONTAINER_STOPPED_FOR_WATCHDOG
3. CONTAINER_REMOVED
4. CONTAINER_FLASH_INACCESSIBLE
5. CONTAINER_STOPPED_REASON

 Above entries shall not be available in any of the logs

Step 2 -
1. cat /tmp/logs/ContainerManager/DEBUG/ContainerManager.txt
 2. cat /mnt/pouch/LifeBoatLogs/ContainerManager.txt.
3. cat /tmp/lxc_logs/50593792.lxclog

===================================================================================================


"""
import pytest
from tests.test_meters.utils import DI_TEST_AGENT, install_agent_and_activate
import time

# AUTOGENERATED Test Case 2003819


@pytest.mark.regress_nightly
@pytest.mark.suite_id("2002265")
@pytest.mark.test_case("2003819")
def test_case(preinstalled_meter, logger):
    logger.trace("Executing Test Case 2003819 - Verify if all the log information is being captured successfully")

    logger.trace('Step 1')
    install_agent_and_activate(preinstalled_meter, logger, DI_TEST_AGENT)
    check_list = ['CONTAINER_START_FAILURE', 'CONTAINER_STOPPED_FOR_WATCHDOG', 'CONTAINER_REMOVED',
                  'CONTAINER_FLASH_INACCESSIBLE', 'CONTAINER_STOPPED_REASON']
    logger.trace('Step 2')
    get_file_data(preinstalled_meter, logger, '/tmp/logs/ContainerManager/DEBUG/ContainerManager.txt', check_list)
    get_file_data(preinstalled_meter, logger, '/mnt/pouch/LifeBoatLogs/ContainerManager.txt', check_list)
    get_file_data(preinstalled_meter, logger, '/tmp/lxc_logs/50593792.lxclog', check_list)


def get_file_data(meter, logger, file_path, check_list):
    cmd = 'cat '+file_path
    logger.trace(cmd)

    timeout = time.time() + (5*60)

    foundall = False
    while time.time() < timeout and not foundall:
        code, data = meter.command_with_code(cmd)
        if code == 0:
            file_data = ''.join(data)
            for item in check_list:
                if item not in file_data:
                    continue
            foundall = True

    assert foundall, "Didn't find all items in file"
