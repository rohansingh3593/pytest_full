"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase1
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/2004397
===================================================================================================
Test Case      : 2004397
Description    : Verify if the ApplicationService/Dataserver shall register to listen ContainerManager system DBus notifications of started/stopped LXC containers.
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Step 1 - 
Precondition: For container validations, Agent installation is a must.

Step 2 -

Step 3 -
Verify if the ApplicationService is able to retrieve a list of active LXC Containers from ContainerManager through calling a method of ContainerManager Dbus service.

 dbus-send --system --dest=com.itron.museplatform.ContainerManager --print-reply --type=method_call /com/itron/museplatform/ContainerManager com.itron.museplatform.ContainerManager.GetContainerList

Step 4 - 
  Container UID should be listed :

  int32 0
   array [
      struct {
         uint32 50593792
         string "unix:path=/tmp/container/50593792/container_bus_socket"
      }
      struct {
         uint32 587464704
         string "unix:path=/tmp/container/587464704/container_bus_socket"
      }
   ]



===================================================================================================


"""
import pytest
import re
import time
from tests.test_meters.utils import HAN_AGENT,Third_Party_PubSub_AGENT,install_multiple_agents_and_activate

# AUTOGENERATED Test Case 2004397

# @pytest.mark.skip(reason="TODO: unimplemented test case")
@pytest.mark.regress_nightly
#@pytest.mark.regress_smoke
@pytest.mark.suite_id("2002265")
@pytest.mark.test_case("2004397")
def test_case(preinstalled_meter, logger):
    logger.trace("Executing Test Case 2004397 - Verify if the ApplicationService/Dataserver shall register to listen ContainerManager system DBus notifications of started/stopped LXC containers.")

    logger.trace('Step 1')
    agent_list = [HAN_AGENT,Third_Party_PubSub_AGENT]
    install_multiple_agents_and_activate(preinstalled_meter, logger, agent_list)
    logger.trace('Step 2')
    logger.trace('Step 3')
    stop = time.time() + (2*60)
    while time.time()<=stop:
      cmd="dbus-send --system --dest=com.itron.museplatform.ContainerManager --print-reply --type=method_call /com/itron/museplatform/ContainerManager com.itron.museplatform.ContainerManager.GetContainerList"
      Container_list=" ".join(preinstalled_meter.command(cmd))
      Container_list=re.findall(r"uint32 (\d+)",Container_list)
      if("50593792" in Container_list and "587464704" in Container_list):
         break
      else:
         time.sleep(5)
    logger.trace('Step 4')
    assert "50593792" in Container_list and "587464704" in Container_list,"Dataserver is not able to communicate with the ContainerManager to retrieve a list of all existing containers"
