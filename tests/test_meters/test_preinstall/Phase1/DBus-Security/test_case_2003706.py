"""
REGENRATE: True
Set REGENERATE to False if you modify this comment
section to inhibit re-writing this section
===================================================================================================
Test Plan Path : templates/AppServ-TestRepository/Phase1
Test Case Link : https://dev.azure.com/itron/SoftwareProducts/_workitems/edit/2003706
===================================================================================================
Test Case      : 2003706
Description    : Verify the dbus overlay changes based on DbusConnectionType
Area Path      : RnD/GFW-IVV/DI Outcomes/APP-Serve
Iteration Path : RnD/3 Week
System.History : None
Steps:
===================================================================================================
Step 1 -
Verify the dbus overlay changes when DbusConnection type is 3-  \"system\"   (Not applicable )

Step 2 -
lxc mount for the d-bus socket which was previously in an overlay will now be hardcoded into the
ContainerManager.                                   System
lxc.mount.entry  = /var/run/dbus/system_bus_socket var/run/dbus/system_bus_socket none
ro,bind,optional 0 0

Step 3 -
Verify the dbus overlay mount path when DbusConnection type is 1 - \"percontainer\". cd
/tmp/container/50593792/lxc.conf

Step 4 -
Percontainer  lxc.mount.entry  =
/tmp/container/[ContainerUID]/container_bus_socket\nvar/run/dbus/system_bus_socket none
ro,bind,optional 0 0\n

Step 5 -
Verify the dbus overlay mount path when DbusConnection type is \"none\"  ( Not applicable)

Step 6 -
Shouldn\'t create any dbus mount paths.( Not applicable)


===================================================================================================


"""
import pytest
from tests.test_meters.utils import Third_Party_PubSub_AGENT,HAN_AGENT,install_multiple_agents_and_activate
# AUTOGENERATED Test Case 2003706

# @pytest.mark.skip(reason="TODO: unimplemented test case")
@pytest.mark.regress_nightly
#@pytest.mark.regress_smoke
@pytest.mark.suite_id("2002265")
@pytest.mark.test_case("2003706")

def test_case(preinstalled_meter, logger):
    logger.trace("Executing Test Case 2003706 - Verify the dbus overlay changes based on DbusConnectionType")
    agent_list = [HAN_AGENT,Third_Party_PubSub_AGENT]
    install_multiple_agents_and_activate(preinstalled_meter, logger, agent_list)
    logger.trace('Step 1')
    """Step 1 Not aplicable"""
    logger.trace('Step 2')
    logger.trace('Step 3')
    itron_container_variable='lxc.mount.entry = /tmp/container/50593792/container_bus_socket var/run/dbus/system_bus_socket none ro,bind,optional 0 0'
    third_party_container_string_variable='lxc.mount.entry = /tmp/container/587464704/container_bus_socket var/run/dbus/system_bus_socket none ro,bind,optional 0 0'
    itron_container=preinstalled_meter.command('cat /tmp/container/50593792/lxc.conf')
    third_party_container=preinstalled_meter.command('cat /tmp/container/587464704/lxc.conf')
    logger.trace('Step 4')
    itron_container_string=' '.join([str(x) for x in itron_container])
    assert itron_container_variable in itron_container_string
    third_party_container_string=' '.join([str(x) for x in third_party_container])
    assert third_party_container_string_variable in third_party_container_string
    logger.trace('Step 5')
    """Verify the dbus overlay mount path when DbusConnection type is \"none\"  ( Not applicable)"""
    logger.trace('Step 6')
    """"Shouldn\'t create any dbus mount paths."""


